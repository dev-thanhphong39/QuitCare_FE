import React, { useEffect, useState } from "react";
import api from "../../configs/axios"; // Import c·∫•u h√¨nh axios ƒë·ªÉ g·ªçi API
import Navbar from "../navbar/Navbar";
import Footer from "../footer/Footer";
import "./SuggestPlaning.css";
import { useNavigate } from "react-router-dom";

function SuggestPlaning() {
  // State l∆∞u k·∫ø ho·∫°ch, tr·∫°ng th√°i loading v√† l·ªói
  const [plan, setPlan] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();
  const accountId = localStorage.getItem("accountId");

  useEffect(() => {
    // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p th√¨ chuy·ªÉn v·ªÅ trang ƒëƒÉng nh·∫≠p
    if (!accountId) {
      navigate("/login");
      return;
    }
    // H√†m l·∫•y k·∫ø ho·∫°ch ƒë·ªÅ xu·∫•t t·ª´ API
    async function fetchPlan() {
      setLoading(true); // B·∫Øt ƒë·∫ßu loading
      setError(""); // X√≥a l·ªói c≈©
      try {
        // G·ªçi API l·∫•y k·∫ø ho·∫°ch cai thu·ªëc c·ªßa user
        const res = await api.get(`/v1/customers/${accountId}/quit-plans`);
        console.log("API tr·∫£ v·ªÅ:", res.data);
        // N·∫øu API tr·∫£ v·ªÅ object (ƒë√£ c√≥ k·∫ø ho·∫°ch)
        if (res.data && !Array.isArray(res.data)) {
          setPlan(res.data); // L∆∞u k·∫ø ho·∫°ch v√†o state
        } else {
          setError("Kh√¥ng t√¨m th·∫•y k·∫ø ho·∫°ch."); // Kh√¥ng c√≥ k·∫ø ho·∫°ch
        }
      } catch (err) {
        setError("Kh√¥ng l·∫•y ƒë∆∞·ª£c k·∫ø ho·∫°ch ƒë·ªÅ xu·∫•t. Vui l√≤ng th·ª≠ l·∫°i!"); // L·ªói g·ªçi API
      }
      setLoading(false); // K·∫øt th√∫c loading
    }
    fetchPlan();
  }, [accountId, navigate]);

  return (
    <>
      <Navbar />
      <div className="suggest-container">
        {loading ? (
          // Hi·ªÉn th·ªã loading khi ƒëang t·∫£i d·ªØ li·ªáu
          <div style={{ textAlign: "center", padding: 40 }}>ƒêang t·∫£i...</div>
        ) : error ? (
          // Hi·ªÉn th·ªã l·ªói n·∫øu c√≥ l·ªói
          <div style={{ color: "red", textAlign: "center", padding: 40 }}>
            {error}
          </div>
        ) : (
          // N·∫øu c√≥ d·ªØ li·ªáu k·∫ø ho·∫°ch th√¨ hi·ªÉn th·ªã th√¥ng tin k·∫ø ho·∫°ch
          <>
            <div className="suggest-header">
              <div>
                <span role="img" aria-label="plan">
                  üìã
                </span>
                <b> K·∫ø ho·∫°ch cai thu·ªëc ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t</b>
              </div>
              <div>
                <span role="img" aria-label="brain">
                  üß†
                </span>
                {/* Hi·ªÉn th·ªã m·ª©c ƒë·ªô nghi·ªán */}
                M·ª©c ƒë·ªô nghi·ªán h·ªá th·ªëng ƒë√°nh gi√°:{" "}
                <b>
                  {plan.addictionLevel === "LOW"
                    ? "Th·∫•p"
                    : plan.addictionLevel === "MEDIUM"
                    ? "Trung b√¨nh"
                    : "Cao"}
                </b>
              </div>
              <div>
                <span role="img" aria-label="cigarette">
                  üö¨
                </span>
                {/* Hi·ªÉn th·ªã s·ªë ƒëi·∫øu h√∫t m·ªói ng√†y ·ªü giai ƒëo·∫°n ƒë·∫ßu */}
                Trung b√¨nh s·ªë ƒëi·∫øu h√∫t m·ªói ng√†y:{" "}
                <b>
                  {plan.stages && plan.stages.length > 0
                    ? plan.stages[0].targetCigarettes
                    : "-"}
                </b>
              </div>
            </div>
            <div className="suggest-table-wrapper">
              <table className="suggest-table">
                <thead>
                  <tr>
                    <th>Giai ƒëo·∫°n (kho·∫£ng 4 tu·∫ßn)</th>
                    <th>Th·ªùi gian</th>
                    <th>S·ªë ƒëi·∫øu m·ªói ng√†y</th>
                  </tr>
                </thead>
                <tbody>
                  {/* N·∫øu c√≥ d·ªØ li·ªáu c√°c giai ƒëo·∫°n th√¨ hi·ªÉn th·ªã t·ª´ng d√≤ng */}
                  {plan.stages && plan.stages.length > 0 ? (
                    plan.stages.map((stage, idx) => (
                      <tr key={stage.id || idx}>
                        <td>Giai ƒëo·∫°n {stage.stageNumber || idx + 1}</td>
                        <td>
                          {stage.week_range ||
                            `Tu·∫ßn ${1 + idx * 4}-${4 + idx * 4}`}
                        </td>
                        <td>{stage.targetCigarettes} ƒëi·∫øu</td>
                      </tr>
                    ))
                  ) : (
                    // N·∫øu kh√¥ng c√≥ d·ªØ li·ªáu giai ƒëo·∫°n th√¨ b√°o kh√¥ng c√≥
                    <tr>
                      <td colSpan={3}>Kh√¥ng c√≥ d·ªØ li·ªáu giai ƒëo·∫°n</td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          </>
        )}
      </div>
      <Footer />
    </>
  );
}

export default SuggestPlaning;
